class Solution {
public:
    // int solve(int n,vector<int>&dp){
    //     // //TOP DOWN APPROACH


    //     // // if n is less than 0 return 0
    //     // if(n<0) return 0;
    //     // // if n is 0 return 1
    //     // if(n==0) return 1;
        
    //     // if(dp[n]!=-1) return dp[n];
    //     // dp[n] =solve(n-1,dp) + solve(n-2,dp);
    //     // return dp[n];
    // }

        // BOTTOM UP APPROACH
    // int solve(int i, int n, vector<int>&dp){
    //     if(i==n) return 1;
    //     if(i>n) return 0;
    //     if(dp[i] != -1) return dp[i];
    //     dp[i] = solve(i+1,n,dp) + solve(i+2,n,dp);
    //     return dp[i];
    // }

    int climbStairs(int n) {
       int a =0;
       int b=1;
       int c =0;
       for(int i =0;i<n;i++){
           c = a+b;
           a = b;
           b = c;
       }
       return b;
    }
};
